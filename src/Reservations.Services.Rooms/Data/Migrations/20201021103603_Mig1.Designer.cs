// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Reservations.Services.Rooms.Data;

namespace Reservations.Services.Rooms.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201021103603_Mig1")]
    partial class Mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("rooms")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Reservations.Services.Rooms.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("Portable")
                        .HasColumnName("portable")
                        .HasColumnType("boolean");

                    b.Property<bool>("Specific")
                        .HasColumnName("specific")
                        .HasColumnType("boolean");

                    b.Property<int>("TotalQuantity")
                        .HasColumnName("total_quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_resources");

                    b.ToTable("resources");
                });

            modelBuilder.Entity("Reservations.Services.Rooms.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<int>("Capacity")
                        .HasColumnName("capacity")
                        .HasColumnType("integer");

                    b.Property<int>("ChairCount")
                        .HasColumnName("chair_count")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<Guid>("OfficeId")
                        .HasColumnName("office_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_rooms");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("Reservations.Services.Rooms.Entities.RoomResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("ResourceId")
                        .HasColumnName("resource_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoomId")
                        .HasColumnName("room_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_room_resources");

                    b.HasIndex("ResourceId")
                        .HasName("ix_room_resources_resource_id");

                    b.HasIndex("RoomId")
                        .HasName("ix_room_resources_room_id");

                    b.ToTable("room_resources");
                });

            modelBuilder.Entity("Reservations.Services.Rooms.Entities.RoomResource", b =>
                {
                    b.HasOne("Reservations.Services.Rooms.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .HasConstraintName("fk_room_resources_resources_resource_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservations.Services.Rooms.Entities.Room", "Room")
                        .WithMany("RoomResources")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_room_resources_rooms_room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
